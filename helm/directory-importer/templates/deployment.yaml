# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH


---
{{- $name := include "common.names.fullname" . }}
{{- $commonLabels := include "common.labels.standard" . | fromYaml }}
{{- $uiLabels := dict "app.kubernetes.io/name" $name }}
{{- $mergedLabels := merge dict $uiLabels $commonLabels}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: $name
  labels:
    {{- toYaml $mergedLabels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- $matchLabels := include "common.labels.matchLabels" . | fromYaml }}
      {{- merge $uiLabels $matchLabels | toYaml | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap-config-file.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- toYaml $mergedLabels | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ $name }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- $imagePullSecrets := coalesce .Values.imagePullSecrets .Values.global.imagePullSecrets }}
      {{- if $imagePullSecrets }}
      imagePullSecrets:
        {{- range $imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
      {{- end }}
      containers:
        - name: "directory-importer"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ coalesce .Values.image.registry .Values.global.imageRegistry }}/{{ .Values.image.repository }}{{ if .Values.image.sha256 }}@sha256:{{ .Values.image.sha256 }}{{ else }}:{{ .Values.image.tag }}{{ end }}"
          imagePullPolicy: {{ coalesce .Values.image.imagePullPolicy .Values.global.imagePullPolicy | quote }}
          envFrom:
            - configMapRef:
                name: {{ $name }}
          env:
            - name: SOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ tpl .Values.sourceDirectory.auth.existingSecret.name . }}
                  key: {{ tpl .Values.sourceDirectory.auth.existingSecret.keyMapping.password . }}
            - name: UDM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ tpl .Values.udm.auth.existingSecret.name . }}
                  key: {{ tpl .Values.udm.auth.existingSecret.keyMapping.password . }}
          {{- with .Values.extraEnvVars }}
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          # TODO: Make a decision about readiness and liveness probes
          livenessProbe:
            httpGet:
              path: /guardian/authorization/openapi.json
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /guardian/authorization/openapi.json
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.extraVolumeMounts }}
          volumeMounts:
              {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" .) | nindent 12 }}
          {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
          {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes  "context" .) | nindent 8 }}
      {{- end }}
...
